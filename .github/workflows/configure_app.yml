##############################################################################
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

# This workflow is run in a fork of https://www.github.com/appfair/App.git
# It will setup a new release with the specified version by tagging it
# with the specified semantic release. 
name: "Configure App Fair App"
on:
  workflow_call:
    inputs:
      # the name of the fairground organization (e.g., "appfair")
      fairground:
        type: string
        required: true
      # the semver tag to use to create the release
      version:
        type: string
        required: true

jobs:
  configure:
    name: "Configure App"
    runs-on: ubuntu-latest

    steps:
      - name: "Setup App: ${{ github.repository_owner }}"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "ORGNAME=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "COMMITHASH=${{ github.sha }}" >> $GITHUB_ENV
          echo "FAIR_APP_ARTIFACT=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "PRODUCT_NAME=$(echo ${{ github.repository_owner }} | tr '-' ' ')" >> $GITHUB_ENV
          echo "BUNDLE_ID=app.$(echo ${{ github.repository_owner }})" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      # Verifies that the repository is named "App"
      - name: "Check Repository Name"
        run: gh repo view "${{ env.ORGNAME }}/App" --json name | jq -e '. | select(.name=="App")'

      # Verifies that the repository is in an org
      - name: "Check Repository Organization"
        run: gh repo view "${{ env.ORGNAME }}/App" --json isInOrganization | jq -e '.isInOrganization'

      # Verifies that the repository is a fork
      - name: "Check Repository Fork"
        run: gh repo view "${{ env.ORGNAME }}/App" --json isFork | jq -e '.isFork'

      # Verifies that issues are enabled for this repository
      - name: "Check Repository Issues"
        run: gh repo view "${{ env.ORGNAME }}/App" --json hasIssuesEnabled | jq -e '.hasIssuesEnabled'

      # Verifies that discussions are enabled for this repository
      # There is no API for this yet, so we just use curl
      - name: "Check Repository Discussions"
        run: curl --head -I --fail -s "https://github.com/${{ env.ORGNAME }}/App/discussions" > /dev/null

      # Verifies that pages are enabled for this repository
      # There is no API for this yet, so we just use curl
      - name: "Check Repository Page: https://${{ env.ORGNAME }}.github.io/App"
        run: curl --location --fail -s "${{ env.ORGNAME }}.github.io/App" | grep "https://app-fair.app/fair#app/${{ env.ORGNAME }}"

      - name: "Checkout ${{ env.PRODUCT_NAME }}"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: "Configure: ${{env.BUNDLE_ID}} ${{ inputs.version }}"
        run: |
          echo "Creating release ${{env.BUNDLE_ID}} ${{ inputs.version }}"

          sed -i 's;^PRODUCT_NAME[ ]*=.*;PRODUCT_NAME = ${{ env.PRODUCT_NAME }};g' AppFairApp.xcconfig
          sed -i 's;^PRODUCT_BUNDLE_IDENTIFIER[ ]*=.*;PRODUCT_BUNDLE_IDENTIFIER = ${{ env.BUNDLE_ID }};g' AppFairApp.xcconfig
          sed -i 's;^MARKETING_VERSION[ ]*=.*;MARKETING_VERSION = ${{ inputs.version }};g' AppFairApp.xcconfig

          git config --global user.name 'fair-ground action'
          git config --global user.email 'fair-ground@users.noreply.github.com'

          git add AppFairApp.xcconfig
          git commit -m "${{ env.PRODUCT_NAME }} ${{ inputs.version }}"
          git push


