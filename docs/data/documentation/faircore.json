{
  "abstract" : [
    {
      "text" : "The core library for fair-ground apps and tools.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FairCore\/documentation\/FairCore"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "FairCore",
    "modules" : [
      {
        "name" : "FairCore"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "FairCore"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "anchor" : "Features",
          "level" : 2,
          "text" : "Features",
          "type" : "heading"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/Cache",
        "doc:\/\/FairCore\/documentation\/FairCore\/FileSystemObserver",
        "doc:\/\/FairCore\/documentation\/FairCore\/HMAC",
        "doc:\/\/FairCore\/documentation\/FairCore\/Plist",
        "doc:\/\/FairCore\/documentation\/FairCore\/SHA256Hasher",
        "doc:\/\/FairCore\/documentation\/FairCore\/SeekableDataHandle",
        "doc:\/\/FairCore\/documentation\/FairCore\/SeekableFileHandle",
        "doc:\/\/FairCore\/documentation\/FairCore\/ZipArchive"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/AsyncParsableCommand",
        "doc:\/\/FairCore\/documentation\/FairCore\/DataConsumer",
        "doc:\/\/FairCore\/documentation\/FairCore\/DepthFirstTreeOf",
        "doc:\/\/FairCore\/documentation\/FairCore\/DepthFirstTreeOfSelf",
        "doc:\/\/FairCore\/documentation\/FairCore\/EnumerableFlag",
        "doc:\/\/FairCore\/documentation\/FairCore\/ExpressibleByArgument",
        "doc:\/\/FairCore\/documentation\/FairCore\/JSONSignable",
        "doc:\/\/FairCore\/documentation\/FairCore\/ParsableArguments",
        "doc:\/\/FairCore\/documentation\/FairCore\/ParsableCommand",
        "doc:\/\/FairCore\/documentation\/FairCore\/RawDecodable",
        "doc:\/\/FairCore\/documentation\/FairCore\/RawEncodable",
        "doc:\/\/FairCore\/documentation\/FairCore\/RawInitializable",
        "doc:\/\/FairCore\/documentation\/FairCore\/SeekableData",
        "doc:\/\/FairCore\/documentation\/FairCore\/SigningContainer",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeOf",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeOfElements",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeOfSelf",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeRoot",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOrType"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/Adler32",
        "doc:\/\/FairCore\/documentation\/FairCore\/AppVersion",
        "doc:\/\/FairCore\/documentation\/FairCore\/Argument",
        "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentArrayParsingStrategy",
        "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentHelp",
        "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentInfoV0",
        "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentVisibility",
        "doc:\/\/FairCore\/documentation\/FairCore\/ArrayParsingStrategy",
        "doc:\/\/FairCore\/documentation\/FairCore\/CleanExit",
        "doc:\/\/FairCore\/documentation\/FairCore\/CommandConfiguration",
        "doc:\/\/FairCore\/documentation\/FairCore\/CommandInfoV0",
        "doc:\/\/FairCore\/documentation\/FairCore\/CompletionKind",
        "doc:\/\/FairCore\/documentation\/FairCore\/Crc32-swift.struct",
        "doc:\/\/FairCore\/documentation\/FairCore\/ExitCode",
        "doc:\/\/FairCore\/documentation\/FairCore\/Flag",
        "doc:\/\/FairCore\/documentation\/FairCore\/FlagExclusivity",
        "doc:\/\/FairCore\/documentation\/FairCore\/FlagInversion",
        "doc:\/\/FairCore\/documentation\/FairCore\/JSumOptions",
        "doc:\/\/FairCore\/documentation\/FairCore\/NameSpecification",
        "doc:\/\/FairCore\/documentation\/FairCore\/Option",
        "doc:\/\/FairCore\/documentation\/FairCore\/OptionGroup",
        "doc:\/\/FairCore\/documentation\/FairCore\/PropertyListKey",
        "doc:\/\/FairCore\/documentation\/FairCore\/SeededRandomNumberGenerator",
        "doc:\/\/FairCore\/documentation\/FairCore\/SingleValueParsingStrategy",
        "doc:\/\/FairCore\/documentation\/FairCore\/ToolInfoHeader",
        "doc:\/\/FairCore\/documentation\/FairCore\/ToolInfoV0",
        "doc:\/\/FairCore\/documentation\/FairCore\/ValidationError",
        "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/assertionsEnabled",
        "doc:\/\/FairCore\/documentation\/FairCore\/defaultDirectoryPermissions",
        "doc:\/\/FairCore\/documentation\/FairCore\/defaultFilePermissions",
        "doc:\/\/FairCore\/documentation\/FairCore\/defaultReadChunkSize",
        "doc:\/\/FairCore\/documentation\/FairCore\/defaultWriteChunkSize"
      ],
      "title" : "Variables"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/dbg(level:_:_:_:_:_:_:_:_:_:_:_:_:functionName:fileName:lineNumber:)",
        "doc:\/\/FairCore\/documentation\/FairCore\/nanos()",
        "doc:\/\/FairCore\/documentation\/FairCore\/prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)-3pelz",
        "doc:\/\/FairCore\/documentation\/FairCore\/prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)-7ngx",
        "doc:\/\/FairCore\/documentation\/FairCore\/withErrorContext(_:key:block:)"
      ],
      "title" : "Functions"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/CRC32-swift.typealias",
        "doc:\/\/FairCore\/documentation\/FairCore\/Consumer",
        "doc:\/\/FairCore\/documentation\/FairCore\/JObj",
        "doc:\/\/FairCore\/documentation\/FairCore\/Provider",
        "doc:\/\/FairCore\/documentation\/FairCore\/Pure",
        "doc:\/\/FairCore\/documentation\/FairCore\/RawCodable",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeEnumeration",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeIndexSequence",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeNodeIterator",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeNodeSequence",
        "doc:\/\/FairCore\/documentation\/FairCore\/XResult"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/CompressionMethod",
        "doc:\/\/FairCore\/documentation\/FairCore\/JSum",
        "doc:\/\/FairCore\/documentation\/FairCore\/OAuth1",
        "doc:\/\/FairCore\/documentation\/FairCore\/SeekableDataErrors",
        "doc:\/\/FairCore\/documentation\/FairCore\/SignableError",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeEnumerations",
        "doc:\/\/FairCore\/documentation\/FairCore\/TreeTraversal",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/faircore"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FairCore/documentation/FairCore": {
  "abstract" : [
    {
      "text" : "The core library for fair-ground apps and tools.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FairCore",
  "type" : "topic",
  "url" : "\/documentation\/faircore"
},
"doc://FairCore/documentation/FairCore/Adler32": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Adler32"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Adler32",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Adler32"
    }
  ],
  "role" : "symbol",
  "title" : "Adler32",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/adler32"
},
"doc://FairCore/documentation/FairCore/AppVersion": {
  "abstract" : [
    {
      "text" : "A semantic version of an app with a ",
      "type" : "text"
    },
    {
      "code" : "major",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "minor",
      "type" : "codeVoice"
    },
    {
      "text" : ", and ",
      "type" : "text"
    },
    {
      "code" : "patch",
      "type" : "codeVoice"
    },
    {
      "text" : " component.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppVersion"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/AppVersion",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppVersion"
    }
  ],
  "role" : "symbol",
  "title" : "AppVersion",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/appversion"
},
"doc://FairCore/documentation/FairCore/Argument": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a positional command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Argument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "role" : "symbol",
  "title" : "Argument",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/argument"
},
"doc://FairCore/documentation/FairCore/ArgumentArrayParsingStrategy": {
  "abstract" : [
    {
      "text" : "The strategy to use when parsing multiple values from positional arguments",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "into an array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentArrayParsingStrategy"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentArrayParsingStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentArrayParsingStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentArrayParsingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/argumentarrayparsingstrategy"
},
"doc://FairCore/documentation/FairCore/ArgumentHelp": {
  "abstract" : [
    {
      "text" : "Help information for a command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentHelp"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentHelp",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentHelp"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentHelp",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/argumenthelp"
},
"doc://FairCore/documentation/FairCore/ArgumentInfoV0": {
  "abstract" : [
    {
      "text" : "All information about a particular argument, including display names and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "options.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentInfoV0"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentInfoV0",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentInfoV0"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentInfoV0",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/argumentinfov0"
},
"doc://FairCore/documentation/FairCore/ArgumentVisibility": {
  "abstract" : [
    {
      "text" : "Visibility level of an argument’s help.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArgumentVisibility"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArgumentVisibility",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArgumentVisibility"
    }
  ],
  "role" : "symbol",
  "title" : "ArgumentVisibility",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/argumentvisibility"
},
"doc://FairCore/documentation/FairCore/ArrayParsingStrategy": {
  "abstract" : [
    {
      "text" : "The strategy to use when parsing multiple values from ",
      "type" : "text"
    },
    {
      "code" : "@Option",
      "type" : "codeVoice"
    },
    {
      "text" : " arguments into an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArrayParsingStrategy"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArrayParsingStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArrayParsingStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "ArrayParsingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/arrayparsingstrategy"
},
"doc://FairCore/documentation/FairCore/AsyncParsableCommand": {
  "abstract" : [
    {
      "text" : "A type that can be executed asynchronously, as part of a nested tree of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "commands.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncParsableCommand"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/AsyncParsableCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncParsableCommand"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncParsableCommand",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/asyncparsablecommand"
},
"doc://FairCore/documentation/FairCore/CRC32-swift.typealias": {
  "abstract" : [
    {
      "text" : "An unsigned 32-Bit Integer representing a checksum.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CRC32"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/CRC32-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CRC32"
    }
  ],
  "role" : "symbol",
  "title" : "CRC32",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/crc32-swift.typealias"
},
"doc://FairCore/documentation/FairCore/Cache": {
  "abstract" : [
    {
      "text" : "Wrapper around ",
      "type" : "text"
    },
    {
      "code" : "NSCache",
      "type" : "codeVoice"
    },
    {
      "text" : " that allows keys\/values to be value types and has an atomic ",
      "type" : "text"
    },
    {
      "code" : "fetch",
      "type" : "codeVoice"
    },
    {
      "text" : " option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Cache"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Cache",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Cache"
    }
  ],
  "role" : "symbol",
  "title" : "Cache",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/cache"
},
"doc://FairCore/documentation/FairCore/CleanExit": {
  "abstract" : [
    {
      "text" : "An error type that represents a clean (i.e. non-error state) exit of the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "utility.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CleanExit"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/CleanExit",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CleanExit"
    }
  ],
  "role" : "symbol",
  "title" : "CleanExit",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/cleanexit"
},
"doc://FairCore/documentation/FairCore/CommandConfiguration": {
  "abstract" : [
    {
      "text" : "The configuration for a command.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CommandConfiguration"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/CommandConfiguration",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CommandConfiguration"
    }
  ],
  "role" : "symbol",
  "title" : "CommandConfiguration",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/commandconfiguration"
},
"doc://FairCore/documentation/FairCore/CommandInfoV0": {
  "abstract" : [
    {
      "text" : "All information about a particular command, including arguments and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "subcommands.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CommandInfoV0"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/CommandInfoV0",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CommandInfoV0"
    }
  ],
  "role" : "symbol",
  "title" : "CommandInfoV0",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/commandinfov0"
},
"doc://FairCore/documentation/FairCore/CompletionKind": {
  "abstract" : [
    {
      "text" : "The type of completion to use for an argument or option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CompletionKind"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/CompletionKind",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CompletionKind"
    }
  ],
  "role" : "symbol",
  "title" : "CompletionKind",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/completionkind"
},
"doc://FairCore/documentation/FairCore/CompressionMethod": {
  "abstract" : [
    {
      "text" : "The compression method of an ",
      "type" : "text"
    },
    {
      "code" : "Entry",
      "type" : "codeVoice"
    },
    {
      "text" : " in a ZIP ",
      "type" : "text"
    },
    {
      "code" : "Archive",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CompressionMethod"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/CompressionMethod",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CompressionMethod"
    }
  ],
  "role" : "symbol",
  "title" : "CompressionMethod",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/compressionmethod"
},
"doc://FairCore/documentation/FairCore/Consumer": {
  "abstract" : [
    {
      "text" : "A custom handler that consumes a ",
      "type" : "text"
    },
    {
      "code" : "Data",
      "type" : "codeVoice"
    },
    {
      "text" : " object containing partial entry data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Consumer"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Consumer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Consumer"
    }
  ],
  "role" : "symbol",
  "title" : "Consumer",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/consumer"
},
"doc://FairCore/documentation/FairCore/Crc32-swift.struct": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Crc32"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Crc32-swift.struct",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Crc32"
    }
  ],
  "role" : "symbol",
  "title" : "Crc32",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/crc32-swift.struct"
},
"doc://FairCore/documentation/FairCore/DataConsumer": {
  "abstract" : [
    {
      "text" : "An actor that consumera data, such as a hashing function",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataConsumer"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/DataConsumer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataConsumer"
    }
  ],
  "role" : "symbol",
  "title" : "DataConsumer",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/dataconsumer"
},
"doc://FairCore/documentation/FairCore/DepthFirstTreeOf": {
  "abstract" : [
    {
      "code" : "TreeOf",
      "type" : "codeVoice"
    },
    {
      "text" : " subprotocol that defines how the tree will be interpreted as a collection.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DepthFirstTreeOf"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/DepthFirstTreeOf",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DepthFirstTreeOf"
    }
  ],
  "role" : "symbol",
  "title" : "DepthFirstTreeOf",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/depthfirsttreeof"
},
"doc://FairCore/documentation/FairCore/DepthFirstTreeOfSelf": {
  "abstract" : [
    {
      "text" : "A depth-first tree is a tree that iterates elements depth-first.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "endIndex",
      "type" : "codeVoice"
    },
    {
      "text" : " for a depth-first tree is the final index with an additional child node.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is merely a marker protocol to indicate how traversal behavior should perform;",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "an alternative ",
      "type" : "text"
    },
    {
      "code" : "BreadthFirstTreeOfSelf",
      "type" : "codeVoice"
    },
    {
      "text" : " could also be implemented with the same",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DepthFirstTreeOfSelf"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/DepthFirstTreeOfSelf",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DepthFirstTreeOfSelf"
    }
  ],
  "role" : "symbol",
  "title" : "DepthFirstTreeOfSelf",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/depthfirsttreeofself"
},
"doc://FairCore/documentation/FairCore/EnumerableFlag": {
  "abstract" : [
    {
      "text" : "A type that represents the different possible flags to be used by a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "@Flag",
      "type" : "codeVoice"
    },
    {
      "text" : " property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EnumerableFlag"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/EnumerableFlag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EnumerableFlag"
    }
  ],
  "role" : "symbol",
  "title" : "EnumerableFlag",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/enumerableflag"
},
"doc://FairCore/documentation/FairCore/ExitCode": {
  "abstract" : [
    {
      "text" : "An error type that only includes an exit code.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExitCode"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ExitCode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExitCode"
    }
  ],
  "role" : "symbol",
  "title" : "ExitCode",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/exitcode"
},
"doc://FairCore/documentation/FairCore/ExpressibleByArgument": {
  "abstract" : [
    {
      "text" : "A type that can be expressed as a command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExpressibleByArgument"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ExpressibleByArgument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExpressibleByArgument"
    }
  ],
  "role" : "symbol",
  "title" : "ExpressibleByArgument",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/expressiblebyargument"
},
"doc://FairCore/documentation/FairCore/FileSystemObserver": {
  "abstract" : [
    {
      "text" : "A watcher for changes to a folder",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileSystemObserver"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/FileSystemObserver",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileSystemObserver"
    }
  ],
  "role" : "symbol",
  "title" : "FileSystemObserver",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/filesystemobserver"
},
"doc://FairCore/documentation/FairCore/Flag": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line flag.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Flag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "role" : "symbol",
  "title" : "Flag",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/flag"
},
"doc://FairCore/documentation/FairCore/FlagExclusivity": {
  "abstract" : [
    {
      "text" : "The options for treating enumeration-based flags as exclusive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FlagExclusivity"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/FlagExclusivity",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FlagExclusivity"
    }
  ],
  "role" : "symbol",
  "title" : "FlagExclusivity",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/flagexclusivity"
},
"doc://FairCore/documentation/FairCore/FlagInversion": {
  "abstract" : [
    {
      "text" : "The options for converting a Boolean flag into a ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : "\/",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " pair.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FlagInversion"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/FlagInversion",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FlagInversion"
    }
  ],
  "role" : "symbol",
  "title" : "FlagInversion",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/flaginversion"
},
"doc://FairCore/documentation/FairCore/HMAC": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HMAC"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/HMAC",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HMAC"
    }
  ],
  "role" : "symbol",
  "title" : "HMAC",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/hmac"
},
"doc://FairCore/documentation/FairCore/JObj": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "JObj",
      "type" : "codeVoice"
    },
    {
      "text" : " is the associated dictionary type for a ",
      "type" : "text"
    },
    {
      "code" : "JSum.obj",
      "type" : "codeVoice"
    },
    {
      "text" : ", which is equivalent to a JSON “object”.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JObj"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/JObj",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JObj"
    }
  ],
  "role" : "symbol",
  "title" : "JObj",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/jobj"
},
"doc://FairCore/documentation/FairCore/JSONSignable": {
  "abstract" : [
    {
      "text" : "A Signable instance is capable of storing a signature of the serialized",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "contents of the remainder of the structure. This can be used to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "authenticate the contents of an untrusted JSON payload by",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "validating it against one or more trusted signing keys.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONSignable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/JSONSignable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONSignable"
    }
  ],
  "role" : "symbol",
  "title" : "JSONSignable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/jsonsignable"
},
"doc://FairCore/documentation/FairCore/JSum": {
  "abstract" : [
    {
      "text" : "A JSum is a JavaScript Union Model, which is a sum type providing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "an in-memory representation of a JSON-representable structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSum"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/JSum",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSum"
    }
  ],
  "role" : "symbol",
  "title" : "JSum",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/jsum"
},
"doc://FairCore/documentation/FairCore/JSumOptions": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSumOptions"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/JSumOptions",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSumOptions"
    }
  ],
  "role" : "symbol",
  "title" : "JSumOptions",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/jsumoptions"
},
"doc://FairCore/documentation/FairCore/NameSpecification": {
  "abstract" : [
    {
      "text" : "A specification for how to represent a property as a command-line argument",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "label.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NameSpecification"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/NameSpecification",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NameSpecification"
    }
  ],
  "role" : "symbol",
  "title" : "NameSpecification",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/namespecification"
},
"doc://FairCore/documentation/FairCore/OAuth1": {
  "abstract" : [
    {
      "text" : "A simple OAuth1 header generator",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OAuth1"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/OAuth1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OAuth1"
    }
  ],
  "role" : "symbol",
  "title" : "OAuth1",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/oauth1"
},
"doc://FairCore/documentation/FairCore/Option": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Option",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "role" : "symbol",
  "title" : "Option",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/option"
},
"doc://FairCore/documentation/FairCore/OptionGroup": {
  "abstract" : [
    {
      "text" : "A wrapper that transparently includes a parsable type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/OptionGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "role" : "symbol",
  "title" : "OptionGroup",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/optiongroup"
},
"doc://FairCore/documentation/FairCore/ParsableArguments": {
  "abstract" : [
    {
      "text" : "A type that can be parsed from a program’s command-line arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ParsableArguments",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "role" : "symbol",
  "title" : "ParsableArguments",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/parsablearguments"
},
"doc://FairCore/documentation/FairCore/ParsableCommand": {
  "abstract" : [
    {
      "text" : "A type that can be executed as part of a nested tree of commands.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsableCommand"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ParsableCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsableCommand"
    }
  ],
  "role" : "symbol",
  "title" : "ParsableCommand",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/parsablecommand"
},
"doc://FairCore/documentation/FairCore/Plist": {
  "abstract" : [
    {
      "text" : "A property list, which is simply a wrapper around an ",
      "type" : "text"
    },
    {
      "code" : "NSDictionary",
      "type" : "codeVoice"
    },
    {
      "text" : " with some conveniences.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Plist"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Plist",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Plist"
    }
  ],
  "role" : "symbol",
  "title" : "Plist",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/plist"
},
"doc://FairCore/documentation/FairCore/PropertyListKey": {
  "abstract" : [
    {
      "text" : "A key in a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Plist",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " holding a standard ",
      "type" : "text"
    },
    {
      "code" : "Info.plist",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PropertyListKey"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/PropertyListKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PropertyListKey"
    }
  ],
  "role" : "symbol",
  "title" : "PropertyListKey",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/propertylistkey"
},
"doc://FairCore/documentation/FairCore/Provider": {
  "abstract" : [
    {
      "text" : "A custom handler that receives a position and a size that can be used to provide data from an arbitrary source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Provider"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Provider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Provider"
    }
  ],
  "role" : "symbol",
  "title" : "Provider",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/provider"
},
"doc://FairCore/documentation/FairCore/Pure": {
  "abstract" : [
    {
      "text" : "A value whose content can be hashed and serialized, and is concurrent-safe",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Pure"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/Pure",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Pure"
    }
  ],
  "role" : "symbol",
  "title" : "Pure",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/pure"
},
"doc://FairCore/documentation/FairCore/RawCodable": {
  "abstract" : [
    {
      "text" : "A RawCodable is a simple ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " wrapper except its coding",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "will store the underlying value directly rather than keyed as “rawValue”,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "thus requiring that the ",
      "type" : "text"
    },
    {
      "code" : "init(rawValue:)",
      "type" : "codeVoice"
    },
    {
      "text" : " be non-failable; it is useful",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a codable typesafe wrapper for some general type like UUID where the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Codable implementation does not automatically use the underlying type (like",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "it does with primitives and Strings)",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawCodable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawCodable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawCodable"
    }
  ],
  "role" : "symbol",
  "title" : "RawCodable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/rawcodable"
},
"doc://FairCore/documentation/FairCore/RawDecodable": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RawDecodable",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "RawInitializable",
      "type" : "codeVoice"
    },
    {
      "text" : " with a ",
      "type" : "text"
    },
    {
      "code" : "Decodable",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Implementations of this type will decode their ",
      "type" : "text"
    },
    {
      "code" : "rawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " payload directly, rather than from an objec with a “rawValue” property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawDecodable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawDecodable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawDecodable"
    }
  ],
  "role" : "symbol",
  "title" : "RawDecodable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/rawdecodable"
},
"doc://FairCore/documentation/FairCore/RawEncodable": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RawDecodable",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " with an ",
      "type" : "text"
    },
    {
      "code" : "Encodable",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Implementations of this type will encode their ",
      "type" : "text"
    },
    {
      "code" : "rawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " payload directly, rather than to an objec with a “rawValue” property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawEncodable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawEncodable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawEncodable"
    }
  ],
  "role" : "symbol",
  "title" : "RawEncodable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/rawencodable"
},
"doc://FairCore/documentation/FairCore/RawInitializable": {
  "abstract" : [
    {
      "text" : "A type that permits items to be initialized non-optionally",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawInitializable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawInitializable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawInitializable"
    }
  ],
  "role" : "symbol",
  "title" : "RawInitializable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/rawinitializable"
},
"doc://FairCore/documentation/FairCore/SHA256Hasher": {
  "abstract" : [
    {
      "text" : "An actor that can keep a running hash of a stream of bytes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SHA256Hasher"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SHA256Hasher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SHA256Hasher"
    }
  ],
  "role" : "symbol",
  "title" : "SHA256Hasher",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/sha256hasher"
},
"doc://FairCore/documentation/FairCore/SeededRandomNumberGenerator": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RandomNumberGenerator",
      "type" : "codeVoice"
    },
    {
      "text" : " that accepts a seed to provide deterministic values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SeededRandomNumberGenerator"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SeededRandomNumberGenerator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SeededRandomNumberGenerator"
    }
  ],
  "role" : "symbol",
  "title" : "SeededRandomNumberGenerator",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/seededrandomnumbergenerator"
},
"doc://FairCore/documentation/FairCore/SeekableData": {
  "abstract" : [
    {
      "text" : "A handle to some data that maintains its ",
      "type" : "text"
    },
    {
      "code" : "offset",
      "type" : "codeVoice"
    },
    {
      "text" : " location and can access subsets of data",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SeekableData"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SeekableData",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SeekableData"
    }
  ],
  "role" : "symbol",
  "title" : "SeekableData",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/seekabledata"
},
"doc://FairCore/documentation/FairCore/SeekableDataErrors": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SeekableDataErrors"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SeekableDataErrors",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SeekableDataErrors"
    }
  ],
  "role" : "symbol",
  "title" : "SeekableDataErrors",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/seekabledataerrors"
},
"doc://FairCore/documentation/FairCore/SeekableDataHandle": {
  "abstract" : [
    {
      "text" : "SeekableData implementation that is backed by a ",
      "type" : "text"
    },
    {
      "code" : "Data",
      "type" : "codeVoice"
    },
    {
      "text" : " instance, which may be in-memory or mapped to a file.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SeekableDataHandle"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SeekableDataHandle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SeekableDataHandle"
    }
  ],
  "role" : "symbol",
  "title" : "SeekableDataHandle",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/seekabledatahandle"
},
"doc://FairCore/documentation/FairCore/SeekableFileHandle": {
  "abstract" : [
    {
      "text" : "SeekableData implementation that is backed by a ",
      "type" : "text"
    },
    {
      "code" : "FileHandle",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SeekableFileHandle"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SeekableFileHandle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SeekableFileHandle"
    }
  ],
  "role" : "symbol",
  "title" : "SeekableFileHandle",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/seekablefilehandle"
},
"doc://FairCore/documentation/FairCore/SignableError": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SignableError"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SignableError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SignableError"
    }
  ],
  "role" : "symbol",
  "title" : "SignableError",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/signableerror"
},
"doc://FairCore/documentation/FairCore/SigningContainer": {
  "abstract" : [
    {
      "text" : "A signable instance can be serialized along with a signature of the serialized form,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "allowing authentication of an arbitrary payload.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SigningContainer"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SigningContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SigningContainer"
    }
  ],
  "role" : "symbol",
  "title" : "SigningContainer",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/signingcontainer"
},
"doc://FairCore/documentation/FairCore/SingleValueParsingStrategy": {
  "abstract" : [
    {
      "text" : "The strategy to use when parsing a single value from ",
      "type" : "text"
    },
    {
      "code" : "@Option",
      "type" : "codeVoice"
    },
    {
      "text" : " arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SingleValueParsingStrategy"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SingleValueParsingStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SingleValueParsingStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "SingleValueParsingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/singlevalueparsingstrategy"
},
"doc://FairCore/documentation/FairCore/ToolInfoHeader": {
  "abstract" : [
    {
      "text" : "Header used to validate serialization version of an encoded ToolInfo struct.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ToolInfoHeader"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ToolInfoHeader",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ToolInfoHeader"
    }
  ],
  "role" : "symbol",
  "title" : "ToolInfoHeader",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/toolinfoheader"
},
"doc://FairCore/documentation/FairCore/ToolInfoV0": {
  "abstract" : [
    {
      "text" : "Top-level structure containing serialization version and information for all",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "commands in a tool.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ToolInfoV0"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ToolInfoV0",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ToolInfoV0"
    }
  ],
  "role" : "symbol",
  "title" : "ToolInfoV0",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/toolinfov0"
},
"doc://FairCore/documentation/FairCore/TreeEnumeration": {
  "abstract" : [
    {
      "text" : "A enumerated sequence of tree node indices and values. Analagous to ",
      "type" : "text"
    },
    {
      "code" : "EnumeratedSequence",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeEnumeration"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeEnumeration",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeEnumeration"
    }
  ],
  "role" : "symbol",
  "title" : "TreeEnumeration",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treeenumeration"
},
"doc://FairCore/documentation/FairCore/TreeEnumerations": {
  "abstract" : [
    {
      "text" : "Utility functions for operating on trees of elements",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeEnumerations"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeEnumerations",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeEnumerations"
    }
  ],
  "role" : "symbol",
  "title" : "TreeEnumerations",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treeenumerations"
},
"doc://FairCore/documentation/FairCore/TreeIndexSequence": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeIndexSequence"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeIndexSequence",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeIndexSequence"
    }
  ],
  "role" : "symbol",
  "title" : "TreeIndexSequence",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treeindexsequence"
},
"doc://FairCore/documentation/FairCore/TreeNodeIterator": {
  "abstract" : [
    {
      "text" : "An iterator over tree nodes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeNodeIterator"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeNodeIterator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeNodeIterator"
    }
  ],
  "role" : "symbol",
  "title" : "TreeNodeIterator",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treenodeiterator"
},
"doc://FairCore/documentation/FairCore/TreeNodeSequence": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeNodeSequence"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeNodeSequence",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeNodeSequence"
    }
  ],
  "role" : "symbol",
  "title" : "TreeNodeSequence",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treenodesequence"
},
"doc://FairCore/documentation/FairCore/TreeOf": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeOf"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeOf",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeOf"
    }
  ],
  "role" : "symbol",
  "title" : "TreeOf",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treeof"
},
"doc://FairCore/documentation/FairCore/TreeOfElements": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "TreeOf",
      "type" : "codeVoice"
    },
    {
      "text" : " sub-protocol that implements a BiDirectional collection",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeOfElements"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeOfElements",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeOfElements"
    }
  ],
  "role" : "symbol",
  "title" : "TreeOfElements",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treeofelements"
},
"doc://FairCore/documentation/FairCore/TreeOfSelf": {
  "abstract" : [
    {
      "text" : "A TreeOfSelf is an instance that contains itself as a collection of children.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Children are accessed through the ",
      "type" : "text"
    },
    {
      "code" : "childrenKeyPath",
      "type" : "codeVoice"
    },
    {
      "text" : " mathod. Collection indexing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is done based on the ",
      "type" : "text"
    },
    {
      "code" : "IndexPath",
      "type" : "codeVoice"
    },
    {
      "text" : " structure.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeOfSelf"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeOfSelf",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeOfSelf"
    }
  ],
  "role" : "symbol",
  "title" : "TreeOfSelf",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treeofself"
},
"doc://FairCore/documentation/FairCore/TreeRoot": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeRoot"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeRoot",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeRoot"
    }
  ],
  "role" : "symbol",
  "title" : "TreeRoot",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treeroot"
},
"doc://FairCore/documentation/FairCore/TreeTraversal": {
  "abstract" : [
    {
      "text" : "The mode for enumerating or searching in a tree",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TreeTraversal"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/TreeTraversal",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TreeTraversal"
    }
  ],
  "role" : "symbol",
  "title" : "TreeTraversal",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/treetraversal"
},
"doc://FairCore/documentation/FairCore/ValidationError": {
  "abstract" : [
    {
      "text" : "An error type that is presented to the user as an error with parsing their",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "command-line input.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ValidationError"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ValidationError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ValidationError"
    }
  ],
  "role" : "symbol",
  "title" : "ValidationError",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/validationerror"
},
"doc://FairCore/documentation/FairCore/XMLNode": {
  "abstract" : [
    {
      "text" : "An XML Element Document, which is an in-memory tree representation",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the contents of an XML source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XMLNode"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XMLNode"
    }
  ],
  "role" : "symbol",
  "title" : "XMLNode",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xmlnode"
},
"doc://FairCore/documentation/FairCore/XOr": {
  "abstract" : [
    {
      "text" : "The basis of one of multiple possible types, equivalent to an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Either",
      "type" : "codeVoice"
    },
    {
      "text" : " sum type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XOr"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XOr"
    }
  ],
  "role" : "symbol",
  "title" : "XOr",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor"
},
"doc://FairCore/documentation/FairCore/XOrType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XOrType"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOrType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XOrType"
    }
  ],
  "role" : "symbol",
  "title" : "XOrType",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xortype"
},
"doc://FairCore/documentation/FairCore/XResult": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "XResult",
      "type" : "codeVoice"
    },
    {
      "text" : " is similar to a ",
      "type" : "text"
    },
    {
      "code" : "Foundation.Result",
      "type" : "codeVoice"
    },
    {
      "text" : " except it uses ",
      "type" : "text"
    },
    {
      "code" : "XOr",
      "type" : "codeVoice"
    },
    {
      "text" : " arity",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XResult"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XResult"
    }
  ],
  "role" : "symbol",
  "title" : "XResult",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xresult"
},
"doc://FairCore/documentation/FairCore/ZipArchive": {
  "abstract" : [
    {
      "text" : "A sequence of uncompressed or compressed ZIP entries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ZipArchive"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ZipArchive",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ZipArchive"
    }
  ],
  "role" : "symbol",
  "title" : "ZipArchive",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/ziparchive"
},
"doc://FairCore/documentation/FairCore/assertionsEnabled": {
  "abstract" : [
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if assertions are enabled for the current build",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "assertionsEnabled"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/assertionsEnabled",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "assertionsEnabled",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/assertionsenabled"
},
"doc://FairCore/documentation/FairCore/dbg(level:_:_:_:_:_:_:_:_:_:_:_:_:functionName:fileName:lineNumber:)": {
  "abstract" : [
    {
      "text" : "Logs the given items to ",
      "type" : "text"
    },
    {
      "code" : "os_log",
      "type" : "codeVoice"
    },
    {
      "text" : " if ",
      "type" : "text"
    },
    {
      "code" : "DEBUG",
      "type" : "codeVoice"
    },
    {
      "text" : " is set",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dbg"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "level"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5UInt8V",
      "text" : "UInt8"
    },
    {
      "kind" : "text",
      "text" : ", () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, () -> "
    },
    {
      "kind" : "keyword",
      "text" : "Any"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "functionName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "lineNumber"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/dbg(level:_:_:_:_:_:_:_:_:_:_:_:_:functionName:fileName:lineNumber:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "dbg(level:_:_:_:_:_:_:_:_:_:_:_:_:functionName:fileName:lineNumber:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/dbg(level:_:_:_:_:_:_:_:_:_:_:_:_:functionname:filename:linenumber:)"
},
"doc://FairCore/documentation/FairCore/defaultDirectoryPermissions": {
  "abstract" : [
    {
      "text" : "The default permissions for newly added directories.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultDirectoryPermissions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6UInt16V",
      "text" : "UInt16"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/defaultDirectoryPermissions",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultDirectoryPermissions",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/defaultdirectorypermissions"
},
"doc://FairCore/documentation/FairCore/defaultFilePermissions": {
  "abstract" : [
    {
      "text" : "The default permissions for newly added entries.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultFilePermissions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6UInt16V",
      "text" : "UInt16"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/defaultFilePermissions",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultFilePermissions",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/defaultfilepermissions"
},
"doc://FairCore/documentation/FairCore/defaultReadChunkSize": {
  "abstract" : [
    {
      "text" : "The default chunk size when reading entry data from an archive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultReadChunkSize"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/defaultReadChunkSize",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultReadChunkSize",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/defaultreadchunksize"
},
"doc://FairCore/documentation/FairCore/defaultWriteChunkSize": {
  "abstract" : [
    {
      "text" : "The default chunk size when writing entry data to an archive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultWriteChunkSize"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/defaultWriteChunkSize",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "defaultWriteChunkSize",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/defaultwritechunksize"
},
"doc://FairCore/documentation/FairCore/nanos()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nanos"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6UInt64V",
      "text" : "UInt64"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/nanos()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nanos()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/nanos()"
},
"doc://FairCore/documentation/FairCore/prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)-3pelz": {
  "abstract" : [
    {
      "text" : "Output a message with the amount of time the given async block took to exeucte",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "prf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "msg"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")?, "
    },
    {
      "kind" : "externalParam",
      "text" : "level"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5UInt8V",
      "text" : "UInt8"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "threshold"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "functionName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "lineNumber"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "block"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)-3pelz",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/prf(_:msg:level:threshold:functionname:filename:linenumber:block:)-3pelz"
},
"doc://FairCore/documentation/FairCore/prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)-7ngx": {
  "abstract" : [
    {
      "text" : "Output a message with the amount of time the given block took to exeucte",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "prf"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "msg"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")?, "
    },
    {
      "kind" : "externalParam",
      "text" : "level"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5UInt8V",
      "text" : "UInt8"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "threshold"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "functionName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileName"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "lineNumber"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "block"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)-7ngx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "prf(_:msg:level:threshold:functionName:fileName:lineNumber:block:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/prf(_:msg:level:threshold:functionname:filename:linenumber:block:)-7ngx"
},
"doc://FairCore/documentation/FairCore/withErrorContext(_:key:block:)": {
  "abstract" : [
    {
      "text" : "Performs the given block and, if an error occurs, enhances the error description with the given value.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The string should be the name of the action that was being taken, and will be prefixed with “Error”.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withErrorContext"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "key"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "block"
    },
    {
      "kind" : "text",
      "text" : ": () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/withErrorContext(_:key:block:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withErrorContext(_:key:block:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/witherrorcontext(_:key:block:)"
}
}
}