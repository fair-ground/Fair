{
  "abstract" : [
    {
      "text" : "No overview available.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FairKit\/documentation\/FairKit",
        "doc:\/\/FairKit\/documentation\/FairKit\/WebViewState"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FairKit\/documentation\/FairKit\/WebViewState\/ObservableObject-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "FairKit"
      }
    ],
    "role" : "collectionGroup",
    "title" : "ObservableObject Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/FairKit\/documentation\/FairKit\/WebViewState\/objectWillChange"
      ],
      "title" : "Instance Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/FairKit\/documentation\/FairKit\/WebViewState\/observing(builder:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fairkit\/webviewstate\/observableobject-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FairKit/documentation/FairKit": {
  "abstract" : [
    {
      "text" : "Extensions to ",
      "type" : "text"
    },
    {
      "code" : "FairApp",
      "type" : "codeVoice"
    },
    {
      "text" : " around creating useful apps.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FairKit\/documentation\/FairKit",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FairKit",
  "type" : "topic",
  "url" : "\/documentation\/fairkit"
},
"doc://FairKit/documentation/FairKit/WebViewState": {
  "abstract" : [
    {
      "text" : "The state of a WebView, which holds the ",
      "type" : "text"
    },
    {
      "code" : "WKWebView",
      "type" : "codeVoice"
    },
    {
      "text" : " instance",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WebViewState"
    }
  ],
  "identifier" : "doc:\/\/FairKit\/documentation\/FairKit\/WebViewState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WebViewState"
    }
  ],
  "role" : "symbol",
  "title" : "WebViewState",
  "type" : "topic",
  "url" : "\/documentation\/fairkit\/webviewstate"
},
"doc://FairKit/documentation/FairKit/WebViewState/objectWillChange": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "ObjectWillChangePublisher",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "ObservableObjectPublisher",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "objectWillChange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine25ObservableObjectPublisherC",
      "text" : "ObservableObjectPublisher"
    }
  ],
  "identifier" : "doc:\/\/FairKit\/documentation\/FairKit\/WebViewState\/objectWillChange",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "objectWillChange",
  "type" : "topic",
  "url" : "\/documentation\/fairkit\/webviewstate\/objectwillchange"
},
"doc://FairKit/documentation/FairKit/WebViewState/observing(builder:)": {
  "abstract" : [
    {
      "text" : "Create a view based on changes to this ",
      "type" : "text"
    },
    {
      "code" : "ObservableObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Ths is typically unnecessary when the instance itself if being observed,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "but when an observed object is being tracked by a ",
      "type" : "text"
    },
    {
      "code" : ".focusedSceneVaule",
      "type" : "codeVoice"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "changes in the viewâ€™s properties do not trigger a state refresh, which can result in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "command properties (e.g., disabled) not being updated until the scene itself re-evaluates.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "observing"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "builder"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "V"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7SwiftUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/FairKit\/documentation\/FairKit\/WebViewState\/observing(builder:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "observing(builder:)",
  "type" : "topic",
  "url" : "\/documentation\/fairkit\/webviewstate\/observing(builder:)"
}
}
}