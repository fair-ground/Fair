{
  "abstract" : [
    {
      "text" : "Insert the given info into the user info dictionary key, pre-pending it to an existing message if it already exists.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Note that this will lose the existing error type and wrap it in an ",
      "type" : "text"
    },
    {
      "code" : "NSError",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FairCore\/documentation\/FairCore",
        "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode",
        "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode\/Errors",
        "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode\/Errors\/Error-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode\/Errors\/withInfo(for:_:prefix:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Swift",
    "externalID" : "s:s5ErrorP8FairCoreE8withInfo3for_6prefixsAA_pSS_SSyXKSbSgtF::SYNTHESIZED::s:8FairCore7XMLNodeV6ErrorsO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "withInfo"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "for"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ", () -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:SS",
        "text" : "String"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "prefix"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:Sb",
        "text" : "Bool"
      },
      {
        "kind" : "text",
        "text" : "?) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s5ErrorP",
        "text" : "Error"
      }
    ],
    "modules" : [
      {
        "name" : "FairCore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "withInfo(for:_:prefix:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "withInfo"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "for"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "key"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "info"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@autoclosure "
            },
            {
              "kind" : "text",
              "text" : "() -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:SS",
              "text" : "String"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "prefix"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sb",
              "text" : "Bool"
            },
            {
              "kind" : "text",
              "text" : "? = true) -> "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s5ErrorP",
              "text" : "Error"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/faircore\/xmlnode\/errors\/withinfo(for:_:prefix:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FairCore/documentation/FairCore": {
  "abstract" : [
    {
      "text" : "The core library for fair-ground apps and tools.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FairCore",
  "type" : "topic",
  "url" : "\/documentation\/faircore"
},
"doc://FairCore/documentation/FairCore/XMLNode": {
  "abstract" : [
    {
      "text" : "An XML Element Document, which is an in-memory tree representation",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the contents of an XML source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XMLNode"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XMLNode"
    }
  ],
  "role" : "symbol",
  "title" : "XMLNode",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xmlnode"
},
"doc://FairCore/documentation/FairCore/XMLNode/Errors": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Errors"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode\/Errors",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Errors"
    }
  ],
  "role" : "symbol",
  "title" : "XMLNode.Errors",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xmlnode\/errors"
},
"doc://FairCore/documentation/FairCore/XMLNode/Errors/Error-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode\/Errors\/Error-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Error Implementations",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xmlnode\/errors\/error-implementations"
},
"doc://FairCore/documentation/FairCore/XMLNode/Errors/withInfo(for:_:prefix:)": {
  "abstract" : [
    {
      "text" : "Insert the given info into the user info dictionary key, pre-pending it to an existing message if it already exists.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Note that this will lose the existing error type and wrap it in an ",
      "type" : "text"
    },
    {
      "code" : "NSError",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "withInfo"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "prefix"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XMLNode\/Errors\/withInfo(for:_:prefix:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "withInfo(for:_:prefix:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xmlnode\/errors\/withinfo(for:_:prefix:)"
}
}
}