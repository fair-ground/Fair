{
  "abstract" : [
    {
      "text" : "A RawCodable is a simple ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " wrapper except its coding",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "will store the underlying value directly rather than keyed as “rawValue”,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "thus requiring that the ",
      "type" : "text"
    },
    {
      "code" : "init(rawValue:)",
      "type" : "codeVoice"
    },
    {
      "text" : " be non-failable; it is useful",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a codable typesafe wrapper for some general type like UUID where the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Codable implementation does not automatically use the underlying type (like",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "it does with primitives and Strings)",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FairCore\/documentation\/FairCore"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FairCore\/documentation\/FairCore\/RawCodable"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8FairCore10RawCodablea",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "typealias"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "RawCodable"
      }
    ],
    "modules" : [
      {
        "name" : "FairCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "RawCodable"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Alias",
    "symbolKind" : "typealias",
    "title" : "RawCodable"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "typealias"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "RawCodable"
            },
            {
              "kind" : "text",
              "text" : " = "
            },
            {
              "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawDecodable",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:8FairCore12RawDecodableP",
              "text" : "RawDecodable"
            },
            {
              "kind" : "text",
              "text" : " & "
            },
            {
              "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawEncodable",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:8FairCore12RawEncodableP",
              "text" : "RawEncodable"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/faircore\/rawcodable"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FairCore/documentation/FairCore": {
  "abstract" : [
    {
      "text" : "The core library for fair-ground apps and tools.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FairCore",
  "type" : "topic",
  "url" : "\/documentation\/faircore"
},
"doc://FairCore/documentation/FairCore/RawCodable": {
  "abstract" : [
    {
      "text" : "A RawCodable is a simple ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " wrapper except its coding",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "will store the underlying value directly rather than keyed as “rawValue”,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "thus requiring that the ",
      "type" : "text"
    },
    {
      "code" : "init(rawValue:)",
      "type" : "codeVoice"
    },
    {
      "text" : " be non-failable; it is useful",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a codable typesafe wrapper for some general type like UUID where the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Codable implementation does not automatically use the underlying type (like",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "it does with primitives and Strings)",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawCodable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawCodable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawCodable"
    }
  ],
  "role" : "symbol",
  "title" : "RawCodable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/rawcodable"
},
"doc://FairCore/documentation/FairCore/RawDecodable": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RawDecodable",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "RawInitializable",
      "type" : "codeVoice"
    },
    {
      "text" : " with a ",
      "type" : "text"
    },
    {
      "code" : "Decodable",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Implementations of this type will decode their ",
      "type" : "text"
    },
    {
      "code" : "rawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " payload directly, rather than from an objec with a “rawValue” property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawDecodable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawDecodable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawDecodable"
    }
  ],
  "role" : "symbol",
  "title" : "RawDecodable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/rawdecodable"
},
"doc://FairCore/documentation/FairCore/RawEncodable": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RawDecodable",
      "type" : "codeVoice"
    },
    {
      "text" : " is a ",
      "type" : "text"
    },
    {
      "code" : "RawRepresentable",
      "type" : "codeVoice"
    },
    {
      "text" : " with an ",
      "type" : "text"
    },
    {
      "code" : "Encodable",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "RawValue",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Implementations of this type will encode their ",
      "type" : "text"
    },
    {
      "code" : "rawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " payload directly, rather than to an objec with a “rawValue” property.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawEncodable"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/RawEncodable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawEncodable"
    }
  ],
  "role" : "symbol",
  "title" : "RawEncodable",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/rawencodable"
}
}
}