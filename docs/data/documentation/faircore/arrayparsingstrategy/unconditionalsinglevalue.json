{
  "abstract" : [
    {
      "text" : "Parse the value immediately after the option while allowing repeating options, joining multiple into an array.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FairCore\/documentation\/FairCore",
        "doc:\/\/FairCore\/documentation\/FairCore\/ArrayParsingStrategy"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FairCore\/documentation\/FairCore\/ArrayParsingStrategy\/unconditionalSingleValue"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8FairCore20ArrayParsingStrategyV24unconditionalSingleValueACvpZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "unconditionalSingleValue"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8FairCore20ArrayParsingStrategyV",
        "text" : "ArrayParsingStrategy"
      }
    ],
    "modules" : [
      {
        "name" : "FairCore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Property",
    "symbolKind" : "property",
    "title" : "unconditionalSingleValue"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "var"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "unconditionalSingleValue"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArrayParsingStrategy",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:8FairCore20ArrayParsingStrategyV",
              "text" : "ArrayParsingStrategy"
            },
            {
              "kind" : "text",
              "text" : " { "
            },
            {
              "kind" : "keyword",
              "text" : "get"
            },
            {
              "kind" : "text",
              "text" : " }"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This is identical to ",
              "type" : "text"
            },
            {
              "code" : ".singleValue",
              "type" : "codeVoice"
            },
            {
              "text" : " except that the value will be read",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "from the input immediately after the option, even if it could be interpreted as an option.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, for a parsable type with a property defined as",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "@Option(parsing: .unconditionalSingleValue) var read: [String]",
              "type" : "codeVoice"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the input ",
              "type" : "text"
            },
            {
              "code" : "--read foo --read bar",
              "type" : "codeVoice"
            },
            {
              "text" : " would result in the array",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "[\"foo\", \"bar\"]",
              "type" : "codeVoice"
            },
            {
              "text" : " â€“ just as it would have been the case for ",
              "type" : "text"
            },
            {
              "code" : ".singleValue",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "However, the input ",
                  "type" : "text"
                },
                {
                  "code" : "--read --name Foo Bar --read baz",
                  "type" : "codeVoice"
                },
                {
                  "text" : " would result in",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "code" : "read",
                  "type" : "codeVoice"
                },
                {
                  "text" : " being set to the array ",
                  "type" : "text"
                },
                {
                  "code" : "[\"--name\", \"baz\"]",
                  "type" : "codeVoice"
                },
                {
                  "text" : ". This is usually ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "not",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " what users",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "would expect. Use with caution.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/faircore\/arrayparsingstrategy\/unconditionalsinglevalue"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FairCore/documentation/FairCore": {
  "abstract" : [
    {
      "text" : "The core library for fair-ground apps and tools.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FairCore",
  "type" : "topic",
  "url" : "\/documentation\/faircore"
},
"doc://FairCore/documentation/FairCore/ArrayParsingStrategy": {
  "abstract" : [
    {
      "text" : "The strategy to use when parsing multiple values from ",
      "type" : "text"
    },
    {
      "code" : "@Option",
      "type" : "codeVoice"
    },
    {
      "text" : " arguments into an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ArrayParsingStrategy"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArrayParsingStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ArrayParsingStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "ArrayParsingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/arrayparsingstrategy"
},
"doc://FairCore/documentation/FairCore/ArrayParsingStrategy/unconditionalSingleValue": {
  "abstract" : [
    {
      "text" : "Parse the value immediately after the option while allowing repeating options, joining multiple into an array.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unconditionalSingleValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore20ArrayParsingStrategyV",
      "text" : "ArrayParsingStrategy"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/ArrayParsingStrategy\/unconditionalSingleValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unconditionalSingleValue",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/arrayparsingstrategy\/unconditionalsinglevalue"
}
}
}