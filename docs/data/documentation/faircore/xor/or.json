{
  "abstract" : [
    {
      "text" : "A sum type: ",
      "type" : "text"
    },
    {
      "code" : "XOr<P>.Or<Q>",
      "type" : "codeVoice"
    },
    {
      "text" : " can hold either an ",
      "type" : "text"
    },
    {
      "code" : "P",
      "type" : "codeVoice"
    },
    {
      "text" : " or a ",
      "type" : "text"
    },
    {
      "code" : "Q",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "E.g., ",
      "type" : "text"
    },
    {
      "code" : "XOr<Int>.Or<String>.Or<Bool>",
      "type" : "codeVoice"
    },
    {
      "text" : " can hold either an ",
      "type" : "text"
    },
    {
      "code" : "Int",
      "type" : "codeVoice"
    },
    {
      "text" : " or a ",
      "type" : "text"
    },
    {
      "code" : "String",
      "type" : "codeVoice"
    },
    {
      "text" : " or a ",
      "type" : "text"
    },
    {
      "code" : "Bool",
      "type" : "codeVoice"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FairCore\/documentation\/FairCore",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8FairCore3XOrO2OrO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Or"
      }
    ],
    "modules" : [
      {
        "name" : "FairCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Or"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "XOr.Or"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "indirect"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Or"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Q"
            },
            {
              "kind" : "text",
              "text" : ">"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/FairCore\/Se",
        "doc:\/\/FairCore\/SE",
        "doc:\/\/FairCore\/SQ",
        "doc:\/\/FairCore\/s5ErrorP",
        "doc:\/\/FairCore\/SH",
        "doc:\/\/FairCore\/s8SendableP",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOrType"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/XOrDecodingError"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/p(_:)",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/q(_:)"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-216sn",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-26w8m",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-3fjcu",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-3iyo",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-4qhrx",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-4r1is",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-540th",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-840wh"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/p-swift.property",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/pvalue",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/q-swift.property",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/qvalue",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/result",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/swapped",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/value"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/get()",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-10ebq",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-45gln",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-4caes",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-4hop1",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-6b51n",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-7l8fp",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-7n8b5",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-oxlj",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/map(_:_:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Failure",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Or",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/P-swift.typealias",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Q-swift.typealias",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Success"
      ],
      "title" : "Type Aliases"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Decodable-Implementations",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Encodable-Implementations",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Equatable-Implementations",
        "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Error-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/faircore\/xor\/or"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FairCore/SE": {
  "identifier" : "doc:\/\/FairCore\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://FairCore/SH": {
  "identifier" : "doc:\/\/FairCore\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://FairCore/SQ": {
  "identifier" : "doc:\/\/FairCore\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://FairCore/Se": {
  "identifier" : "doc:\/\/FairCore\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://FairCore/documentation/FairCore": {
  "abstract" : [
    {
      "text" : "The core library for fair-ground apps and tools.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FairCore",
  "type" : "topic",
  "url" : "\/documentation\/faircore"
},
"doc://FairCore/documentation/FairCore/XOr": {
  "abstract" : [
    {
      "text" : "The basis of one of multiple possible types, equivalent to an",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "Either",
      "type" : "codeVoice"
    },
    {
      "text" : " sum type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XOr"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XOr"
    }
  ],
  "role" : "symbol",
  "title" : "XOr",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor"
},
"doc://FairCore/documentation/FairCore/XOr/Or": {
  "abstract" : [
    {
      "text" : "A sum type: ",
      "type" : "text"
    },
    {
      "code" : "XOr<P>.Or<Q>",
      "type" : "codeVoice"
    },
    {
      "text" : " can hold either an ",
      "type" : "text"
    },
    {
      "code" : "P",
      "type" : "codeVoice"
    },
    {
      "text" : " or a ",
      "type" : "text"
    },
    {
      "code" : "Q",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "E.g., ",
      "type" : "text"
    },
    {
      "code" : "XOr<Int>.Or<String>.Or<Bool>",
      "type" : "codeVoice"
    },
    {
      "text" : " can hold either an ",
      "type" : "text"
    },
    {
      "code" : "Int",
      "type" : "codeVoice"
    },
    {
      "text" : " or a ",
      "type" : "text"
    },
    {
      "code" : "String",
      "type" : "codeVoice"
    },
    {
      "text" : " or a ",
      "type" : "text"
    },
    {
      "code" : "Bool",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Or"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Or"
    }
  ],
  "role" : "symbol",
  "title" : "XOr.Or",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Decodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Decodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Decodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/decodable-implementations"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Encodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Encodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Encodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/encodable-implementations"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/equatable-implementations"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Error-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Error-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Error Implementations",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/error-implementations"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Failure": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Error",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Failure"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Failure",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Failure"
    }
  ],
  "role" : "symbol",
  "title" : "XOr.Or.Failure",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/failure"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Or": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Or"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Or",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Or"
    }
  ],
  "role" : "symbol",
  "title" : "XOr.Or.Or",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/or"
},
"doc://FairCore/documentation/FairCore/XOr/Or/P-swift.typealias": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "P"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/P-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "P"
    }
  ],
  "role" : "symbol",
  "title" : "XOr.Or.P",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/p-swift.typealias"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Q-swift.typealias": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Q"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Q-swift.typealias",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Q"
    }
  ],
  "role" : "symbol",
  "title" : "XOr.Or.Q",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/q-swift.typealias"
},
"doc://FairCore/documentation/FairCore/XOr/Or/Success": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Error",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Success"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/Success",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Success"
    }
  ],
  "role" : "symbol",
  "title" : "XOr.Or.Success",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/success"
},
"doc://FairCore/documentation/FairCore/XOr/Or/XOrDecodingError": {
  "abstract" : [
    {
      "text" : "An error that occurs when decoding fails for an ",
      "type" : "text"
    },
    {
      "code" : "XOr",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This encapsulates all the errors that resulted in the decode arrempt.",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Decodable",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Decodable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XOrDecodingError"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/XOrDecodingError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XOrDecodingError"
    }
  ],
  "role" : "symbol",
  "title" : "XOr.Or.XOrDecodingError",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/xordecodingerror"
},
"doc://FairCore/documentation/FairCore/XOr/Or/get()": {
  "abstract" : [
    {
      "text" : "Unwraps the success value or throws a failure if it is an error",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Error",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "get"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/get()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "get()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/get()"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-10ebq": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-10ebq",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-10ebq"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-45gln": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-45gln",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-45gln"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-4caes": {
  "abstract" : [
    {
      "code" : "Q.Q",
      "type" : "codeVoice"
    },
    {
      "text" : " if that is the case",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-4caes",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-4caes"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-4hop1": {
  "abstract" : [
    {
      "code" : "Q.Q.P",
      "type" : "codeVoice"
    },
    {
      "text" : " if that is the case",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-4hop1",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-4hop1"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-6b51n": {
  "abstract" : [
    {
      "code" : "Q.Q.Q",
      "type" : "codeVoice"
    },
    {
      "text" : " if that is the case",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-6b51n",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-6b51n"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-7l8fp": {
  "abstract" : [
    {
      "code" : "Q.P",
      "type" : "codeVoice"
    },
    {
      "text" : " if that is the case",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-7l8fp",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-7l8fp"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-7n8b5": {
  "abstract" : [
    {
      "code" : "Q.P.Q",
      "type" : "codeVoice"
    },
    {
      "text" : " if that is the case",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-7n8b5",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-7n8b5"
},
"doc://FairCore/documentation/FairCore/XOr/Or/infer()-oxlj": {
  "abstract" : [
    {
      "code" : "Q.P.P",
      "type" : "codeVoice"
    },
    {
      "text" : " if that is the case",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "infer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/infer()-oxlj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "infer()",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/infer()-oxlj"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-216sn": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-216sn",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-216sn"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-26w8m": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-26w8m",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-26w8m"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-3fjcu": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-3fjcu",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-3fjcu"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-3iyo": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-3iyo",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-3iyo"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-4qhrx": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-4qhrx",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-4qhrx"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-4r1is": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-4r1is",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-4r1is"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-540th": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-540th",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-540th"
},
"doc://FairCore/documentation/FairCore/XOr/Or/init(_:)-840wh": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "Q.P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "XOrType",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/init(_:)-840wh",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/init(_:)-840wh"
},
"doc://FairCore/documentation/FairCore/XOr/Or/map(_:_:)": {
  "abstract" : [
    {
      "text" : "Maps each side of an ",
      "type" : "text"
    },
    {
      "code" : "XOr.Or",
      "type" : "codeVoice"
    },
    {
      "text" : " through the given function",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "U"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/map(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "map(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/map(_:_:)"
},
"doc://FairCore/documentation/FairCore/XOr/Or/p(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "p"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/p(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "XOr.Or.p(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/p(_:)"
},
"doc://FairCore/documentation/FairCore/XOr/Or/p-swift.property": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "p"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/p-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "p",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/p-swift.property"
},
"doc://FairCore/documentation/FairCore/XOr/Or/pvalue": {
  "abstract" : [
    {
      "text" : "The underlying value of the p or q, when ",
      "type" : "text"
    },
    {
      "code" : "P == Q",
      "type" : "codeVoice"
    },
    {
      "text" : ", where mutation always sets ",
      "type" : "text"
    },
    {
      "code" : ".p",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pvalue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/pvalue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "pvalue",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/pvalue"
},
"doc://FairCore/documentation/FairCore/XOr/Or/q(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "q"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/q(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "XOr.Or.q(_:)",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/q(_:)"
},
"doc://FairCore/documentation/FairCore/XOr/Or/q-swift.property": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "q"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/q-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "q",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/q-swift.property"
},
"doc://FairCore/documentation/FairCore/XOr/Or/qvalue": {
  "abstract" : [
    {
      "text" : "The underlying value of the p or q, when ",
      "type" : "text"
    },
    {
      "code" : "P == Q",
      "type" : "codeVoice"
    },
    {
      "text" : ", where mutation always sets ",
      "type" : "text"
    },
    {
      "code" : ".q",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "qvalue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/qvalue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "qvalue",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/qvalue"
},
"doc://FairCore/documentation/FairCore/XOr/Or/result": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "XOr",
      "type" : "codeVoice"
    },
    {
      "text" : " whose first element is an error type can be converted to a ",
      "type" : "text"
    },
    {
      "code" : "Result",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Note that the arity is the opposite of ",
      "type" : "text"
    },
    {
      "code" : "Result",
      "type" : "codeVoice"
    },
    {
      "text" : ": ",
      "type" : "text"
    },
    {
      "code" : "XOr",
      "type" : "codeVoice"
    },
    {
      "text" : "’s first type will be ",
      "type" : "text"
    },
    {
      "code" : "Error",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Error",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "result"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Success"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Failure"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/result",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "result",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/result"
},
"doc://FairCore/documentation/FairCore/XOr/Or/swapped": {
  "abstract" : [
    {
      "text" : "Returns a flipped view of the ",
      "type" : "text"
    },
    {
      "code" : "XOr.Or",
      "type" : "codeVoice"
    },
    {
      "text" : ", where ",
      "type" : "text"
    },
    {
      "code" : "P",
      "type" : "codeVoice"
    },
    {
      "text" : " becomes ",
      "type" : "text"
    },
    {
      "code" : "Q",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "Q",
      "type" : "codeVoice"
    },
    {
      "text" : " becomes ",
      "type" : "text"
    },
    {
      "code" : "P",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "swapped"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO",
      "text" : "XOr"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Q"
    },
    {
      "kind" : "text",
      "text" : ">."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore3XOrO2OrO",
      "text" : "Or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/swapped",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "swapped",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/swapped"
},
"doc://FairCore/documentation/FairCore/XOr/Or/value": {
  "abstract" : [
    {
      "text" : "The underlying read-only value of either p or q\u0007",
      "type" : "text"
    }
  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "P",
        "type" : "codeVoice"
      },
      {
        "text" : " is ",
        "type" : "text"
      },
      {
        "code" : "Q",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "P"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOr\/Or\/value",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xor\/or\/value"
},
"doc://FairCore/documentation/FairCore/XOrType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "XOrType"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/XOrType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "XOrType"
    }
  ],
  "role" : "symbol",
  "title" : "XOrType",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/xortype"
},
"doc://FairCore/s5ErrorP": {
  "identifier" : "doc:\/\/FairCore\/s5ErrorP",
  "title" : "Swift.Error",
  "type" : "unresolvable"
},
"doc://FairCore/s8SendableP": {
  "identifier" : "doc:\/\/FairCore\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}