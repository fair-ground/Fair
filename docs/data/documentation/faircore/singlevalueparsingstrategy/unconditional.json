{
  "abstract" : [
    {
      "text" : "Parse the next input, even if it could be interpreted as an option or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "flag.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FairCore\/documentation\/FairCore",
        "doc:\/\/FairCore\/documentation\/FairCore\/SingleValueParsingStrategy"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FairCore\/documentation\/FairCore\/SingleValueParsingStrategy\/unconditional"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8FairCore26SingleValueParsingStrategyV13unconditionalACvpZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "var"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "unconditional"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:8FairCore26SingleValueParsingStrategyV",
        "text" : "SingleValueParsingStrategy"
      }
    ],
    "modules" : [
      {
        "name" : "FairCore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Property",
    "symbolKind" : "property",
    "title" : "unconditional"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "var"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "unconditional"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SingleValueParsingStrategy",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:8FairCore26SingleValueParsingStrategyV",
              "text" : "SingleValueParsingStrategy"
            },
            {
              "kind" : "text",
              "text" : " { "
            },
            {
              "kind" : "keyword",
              "text" : "get"
            },
            {
              "kind" : "text",
              "text" : " }"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For inputs such as ",
              "type" : "text"
            },
            {
              "code" : "--foo --bar baz",
              "type" : "codeVoice"
            },
            {
              "text" : ", if ",
              "type" : "text"
            },
            {
              "code" : ".unconditional",
              "type" : "codeVoice"
            },
            {
              "text" : " is used for ",
              "type" : "text"
            },
            {
              "code" : "foo",
              "type" : "codeVoice"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "this would read ",
              "type" : "text"
            },
            {
              "code" : "--bar",
              "type" : "codeVoice"
            },
            {
              "text" : " as the value for ",
              "type" : "text"
            },
            {
              "code" : "foo",
              "type" : "codeVoice"
            },
            {
              "text" : " and would use ",
              "type" : "text"
            },
            {
              "code" : "baz",
              "type" : "codeVoice"
            },
            {
              "text" : " as",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the next positional argument.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This allows reading negative numeric values or capturing flags to be",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "passed through to another program since the leading hyphen is normally",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "interpreted as the start of another option.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "This is usually ",
                  "type" : "text"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "not",
                      "type" : "text"
                    }
                  ],
                  "type" : "emphasis"
                },
                {
                  "text" : " what users would expect. Use with caution.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/faircore\/singlevalueparsingstrategy\/unconditional"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FairCore/documentation/FairCore": {
  "abstract" : [
    {
      "text" : "The core library for fair-ground apps and tools.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FairCore",
  "type" : "topic",
  "url" : "\/documentation\/faircore"
},
"doc://FairCore/documentation/FairCore/SingleValueParsingStrategy": {
  "abstract" : [
    {
      "text" : "The strategy to use when parsing a single value from ",
      "type" : "text"
    },
    {
      "code" : "@Option",
      "type" : "codeVoice"
    },
    {
      "text" : " arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SingleValueParsingStrategy"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SingleValueParsingStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SingleValueParsingStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "SingleValueParsingStrategy",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/singlevalueparsingstrategy"
},
"doc://FairCore/documentation/FairCore/SingleValueParsingStrategy/unconditional": {
  "abstract" : [
    {
      "text" : "Parse the next input, even if it could be interpreted as an option or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "flag.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unconditional"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8FairCore26SingleValueParsingStrategyV",
      "text" : "SingleValueParsingStrategy"
    }
  ],
  "identifier" : "doc:\/\/FairCore\/documentation\/FairCore\/SingleValueParsingStrategy\/unconditional",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unconditional",
  "type" : "topic",
  "url" : "\/documentation\/faircore\/singlevalueparsingstrategy\/unconditional"
}
}
}